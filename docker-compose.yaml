version: "3.9"

services:
  wlib_postgres:
    image: postgres:15
    container_name: wlib_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - wlib_postgres_data:/var/lib/postgresql/data
    networks:
      - wlib-network
    ports:
      - "15432:5432"

  wlib_backend_migrate:
    container_name: wlib_postgres_migrate
    build:
      context: ./backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
    command: alembic upgrade head
    depends_on:
      wlib_postgres:
        condition: service_healthy
    networks:
      - wlib-network

  wlib_backend:
    container_name: wlib_backend
    build:
      context: ./backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
    command: python run.py
    depends_on:
      wlib_backend_migrate:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    networks:
      - wlib-network

  wlib_frontend:
    container_name: wlib_frontend
    build:
      context: ./frontend
    ports:
      - "4200:80"
    depends_on:
      - wlib_backend
    networks:
      - wlib-network

  wlib_post_setup:
    container_name: wlib_post_setup
    build:
      context: ./backend
    command: >
      sh -c "
        apt-get update && apt-get install -y curl &&
        echo 'Waiting for backend to be ready...' &&
        until curl -s http://wlib_backend:8000/settings; do sleep 2; done &&
        echo 'Backend is ready. Running setup scripts...' &&
        python scripts/create_demo_users.py &&
        python scripts/create_activity.py -u 5 -d 100
      "
    depends_on:
      wlib_backend:
        condition: service_started
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - API_URL=http://wlib_backend:8000
    networks:
      - wlib-network

volumes:
  wlib_postgres_data:

networks:
  wlib-network:
    driver: bridge
